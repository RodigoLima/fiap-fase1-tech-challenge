// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using fiap_fase1_tech_challenge.Database;

#nullable disable

namespace fiap_fase1_tech_challenge.Database.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250406020825_create_promotion_table")]
    partial class create_promotion_table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("fiap_fase1_tech_challenge.Models.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("fiap_fase1_tech_challenge.Models.GameLibrary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("GameLibraries");
                });

            modelBuilder.Entity("fiap_fase1_tech_challenge.Models.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("DiscountPercent")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FinalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("fiap_fase1_tech_challenge.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f3fec04-b8f5-4a9a-b8d7-24e15abb6494"),
                            Name = "user"
                        },
                        new
                        {
                            Id = new Guid("abbf75f9-53d8-4c80-9d3a-40cc1dd117ab"),
                            Name = "admin"
                        });
                });

            modelBuilder.Entity("fiap_fase1_tech_challenge.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c4fa95b4-1d43-4a79-a63e-5c64856cbdf6"),
                            Email = "admin@mail.com",
                            Name = "admin",
                            Password = "Ad123p@ssword",
                            RoleId = new Guid("abbf75f9-53d8-4c80-9d3a-40cc1dd117ab")
                        });
                });

            modelBuilder.Entity("fiap_fase1_tech_challenge.Models.GameLibrary", b =>
                {
                    b.HasOne("fiap_fase1_tech_challenge.Models.Game", "Game")
                        .WithMany("GameLibrary")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("fiap_fase1_tech_challenge.Models.User", "User")
                        .WithMany("GameLibrary")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("fiap_fase1_tech_challenge.Models.Promotion", b =>
                {
                    b.HasOne("fiap_fase1_tech_challenge.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("fiap_fase1_tech_challenge.Models.User", b =>
                {
                    b.HasOne("fiap_fase1_tech_challenge.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("fiap_fase1_tech_challenge.Models.Game", b =>
                {
                    b.Navigation("GameLibrary");
                });

            modelBuilder.Entity("fiap_fase1_tech_challenge.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("fiap_fase1_tech_challenge.Models.User", b =>
                {
                    b.Navigation("GameLibrary");
                });
#pragma warning restore 612, 618
        }
    }
}
